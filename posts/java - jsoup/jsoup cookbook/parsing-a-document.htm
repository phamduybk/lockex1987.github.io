<!DOCTYPE html>
<html>
    <head>
        <title>parsing-a-document</title>
        <link type="text/css" rel="stylesheet" href="style.css"/>
    </head>
    <body class="n1-cookbook">
        <div class="wrap">
            <div class="content">
                <div class="col1"><div class="recipe"> 
 <h1>Parsing and traversing a Document</h1> 
 <p>To parse a HTML document:</p> 
 <pre><code class="prettyprint">String html = &quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;First parse&lt;/title&gt;&lt;/head&gt;&quot;
  + &quot;&lt;body&gt;&lt;p&gt;Parsed HTML into a doc.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;&quot;;
Document doc = Jsoup.parse(html);
</code></pre> 
 <p>(See <a href="../input/parse-document-from-string">parsing a document from a string</a> for more info.)</p> 
 <p>The parser will make every attempt to create a clean parse from the HTML you provide, regardless of whether the HTML is well-formed or not. It handles:</p> 
 <ul> 
  <li>unclosed tags (e.g. <code>&lt;p&gt;Lorem &lt;p&gt;Ipsum</code> parses to <code>&lt;p&gt;Lorem&lt;/p&gt; &lt;p&gt;Ipsum&lt;/p&gt;</code>)</li> 
  <li>implicit tags (e.g. a naked <code>&lt;td&gt;Table data&lt;/td&gt;</code> is wrapped into a <code>&lt;table&gt;&lt;tr&gt;&lt;td&gt;?</code>)</li> 
  <li>reliably creating the document structure (<code>html</code> containing a <code>head</code> and <code>body</code>, and only appropriate elements within the head)</li> 
 </ul> 
 <h2>The object model of a document</h2> 
 <ul> 
  <li>Documents consist of Elements and TextNodes (and a couple of other misc nodes: see the <a href="/apidocs/org/jsoup/nodes/package-tree.html">nodes package tree</a>).</li> 
  <li>The inheritance chain is: <code><a href="/apidocs/org/jsoup/nodes/Document.html" title="A HTML Document.">Document</a></code> extends <code><a href="/apidocs/org/jsoup/nodes/Element.html" title="A HTML element consists of a tag name, attributes, and child nodes (including text nodes and other elements).">Element</a></code> extends <code><a href="/apidocs/org/jsoup/nodes/Node.html" title="The base, abstract Node model.">Node</a></code>. <code><a href="/apidocs/org/jsoup/nodes/TextNode.html" title="A text node.">TextNode</a></code> extends <code><a href="/apidocs/org/jsoup/nodes/Node.html" title="The base, abstract Node model.">Node</a></code>.</li> 
  <li>An Element contains a list of children Nodes, and has one parent Element. They also have provide a filtered list of child Elements only.</li> 
 </ul> 
 <h2>See also</h2> 
 <ul> 
  <li>Extracting data: <a href="../extracting-data/dom-navigation">DOM navigation</a></li> 
  <li>Extracting data: <a href="../extracting-data/selector-syntax">Selector syntax</a></li> 
 </ul> 
</div>
                </div>
                <div class="col2">
                    <div class="toc box">
                        <h2>Cookbook contents</h2>
                        <h3>Introduction</h3>
                        <ol start="1">
                            <li><a href="parsing-a-document.htm">Parsing and traversing a Document</a></li>
                        </ol>
                        <h3>Input</h3>
                        <ol start="2">
                            <li><a href="parse-document-from-string.htm">Parse a document from a String</a></li>
                            <li><a href="parse-body-fragment.htm">Parsing a body fragment</a></li>
                            <li><a href="load-document-from-url.htm">Load a Document from a URL</a></li>
                            <li><a href="load-document-from-file.htm">Load a Document from a File</a></li>
                        </ol>
                        <h3>Extracting data</h3>
                        <ol start="6">
                            <li><a href="dom-navigation.htm">Use DOM methods to navigate a document</a></li>
                            <li><a href="selector-syntax.htm">Use selector-syntax to find elements</a></li>
                            <li><a href="attributes-text-html.htm">Extract attributes, text, and HTML from elements</a></li>
                            <li><a href="working-with-urls.htm">Working with URLs</a></li>
                            <li><a href="example-list-links.htm">Example program: list links</a></li>
                        </ol>
                        <h3>Modifying data</h3>
                        <ol start="11">
                            <li><a href="set-attributes.htm">Set attribute values</a></li>
                            <li><a href="set-html.htm">Set the HTML of an element</a></li>
                            <li><a href="set-text.htm">Setting the text content of elements</a></li>
                        </ol>
                        <h3>Cleaning HTML</h3>
                        <ol start="14">
                            <li><a href="whitelist-sanitizer.htm">Sanitize untrusted HTML (to prevent XSS)</a></li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </body>
</html>
