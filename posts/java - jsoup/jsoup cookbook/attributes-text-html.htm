<!DOCTYPE html>
<html>
    <head>
        <title>attributes-text-html</title>
        <link type="text/css" rel="stylesheet" href="style.css"/>
    </head>
    <body class="n1-cookbook">
        <div class="wrap">
            <div class="content">
                <div class="col1"><div class="recipe"> 
 <h1>Extract attributes, text, and HTML from elements</h1> 
 <h2>Problem</h2> 
 <p>After parsing a document, and finding some elements, you'll want to get at the data inside those elements.</p> 
 <h2>Solution</h2> 
 <ul> 
  <li>To get the value of an attribute, use the <code><a href="/apidocs/org/jsoup/nodes/Node.html#attr(java.lang.String)" title="Get an attribute's value by its key.">Node.attr(String key)</a></code> method</li> 
  <li>For the text on an element (and its combined children), use <code><a href="/apidocs/org/jsoup/nodes/Element.html#text()" title="Gets the combined text of this element and all its children.">Element.text()</a></code></li> 
  <li>For HTML, use <code><a href="/apidocs/org/jsoup/nodes/Element.html#html()" title="Retrieves the element's inner HTML.">Element.html()</a></code>, or <code><a href="/apidocs/org/jsoup/nodes/Node.html#outerHtml()" title="Get the outer HTML of this node.">Node.outerHtml()</a></code> as appropriate</li> 
 </ul> 
 <p>For example:</p> 
 <pre><code class="prettyprint">String html = &quot;&lt;p&gt;An &lt;a href='http://example.com/'&gt;&lt;b&gt;example&lt;/b&gt;&lt;/a&gt; link.&lt;/p&gt;&quot;;
Document doc = Jsoup.parse(html);
Element link = doc.select(&quot;a&quot;).first();

String text = doc.body().text(); // &quot;An example link&quot;
String linkHref = link.attr(&quot;href&quot;); // &quot;http://example.com/&quot;
String linkText = link.text(); // &quot;example&quot;&quot;

String linkOuterH = link.outerHtml(); 
    // &quot;&lt;a href=&quot;http://example.com&quot;&gt;&lt;b&gt;example&lt;/b&gt;&lt;/a&gt;&quot;
String linkInnerH = link.html(); // &quot;&lt;b&gt;example&lt;/b&gt;&quot;
</code></pre> 
 <h2>Description</h2> 
 <p>The methods above are the core of the element data access methods. There are additional others:</p> 
 <ul> 
  <li><code><a href="/apidocs/org/jsoup/nodes/Element.html#id()" title="Get the id attribute of this element.">Element.id()</a></code></li> 
  <li><code><a href="/apidocs/org/jsoup/nodes/Element.html#tagName()" title="Get the name of the tag for this element.">Element.tagName()</a></code></li> 
  <li><code><a href="/apidocs/org/jsoup/nodes/Element.html#className()" title="Gets the literal value of this element's &quot;class&quot; attribute, which may include multiple class names, space separated.">Element.className()</a></code> and <code><a href="/apidocs/org/jsoup/nodes/Element.html#hasClass(java.lang.String)" title="Tests if this element has a class.">Element.hasClass(String className)</a></code></li> 
 </ul> 
 <p>All of these accessor methods have corresponding setter methods to change the data.</p> 
 <h2>See also</h2> 
 <ul> 
  <li>The reference documentation for <code><a href="/apidocs/org/jsoup/nodes/Element.html" title="A HTML element consists of a tag name, attributes, and child nodes (including text nodes and other elements).">Element</a></code> and the collection <code><a href="/apidocs/org/jsoup/select/Elements.html" title="A list of Elements, with methods that act on every element in the list.">Elements</a></code> class</li> 
  <li><a href="/cookbook/extracting-data/working-with-urls">Working with URLs</a></li> 
  <li><a href="/cookbook/extracting-data/selector-syntax">finding elements with the CSS selector syntax</a></li> 
 </ul> 
</div>
                </div>
                <div class="col2">
                    <div class="toc box">
                        <h2>Cookbook contents</h2>
                        <h3>Introduction</h3>
                        <ol start="1">
                            <li><a href="parsing-a-document.htm">Parsing and traversing a Document</a></li>
                        </ol>
                        <h3>Input</h3>
                        <ol start="2">
                            <li><a href="parse-document-from-string.htm">Parse a document from a String</a></li>
                            <li><a href="parse-body-fragment.htm">Parsing a body fragment</a></li>
                            <li><a href="load-document-from-url.htm">Load a Document from a URL</a></li>
                            <li><a href="load-document-from-file.htm">Load a Document from a File</a></li>
                        </ol>
                        <h3>Extracting data</h3>
                        <ol start="6">
                            <li><a href="dom-navigation.htm">Use DOM methods to navigate a document</a></li>
                            <li><a href="selector-syntax.htm">Use selector-syntax to find elements</a></li>
                            <li><a href="attributes-text-html.htm">Extract attributes, text, and HTML from elements</a></li>
                            <li><a href="working-with-urls.htm">Working with URLs</a></li>
                            <li><a href="example-list-links.htm">Example program: list links</a></li>
                        </ol>
                        <h3>Modifying data</h3>
                        <ol start="11">
                            <li><a href="set-attributes.htm">Set attribute values</a></li>
                            <li><a href="set-html.htm">Set the HTML of an element</a></li>
                            <li><a href="set-text.htm">Setting the text content of elements</a></li>
                        </ol>
                        <h3>Cleaning HTML</h3>
                        <ol start="14">
                            <li><a href="whitelist-sanitizer.htm">Sanitize untrusted HTML (to prevent XSS)</a></li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </body>
</html>
