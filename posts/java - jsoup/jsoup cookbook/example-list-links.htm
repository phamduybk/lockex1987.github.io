<!DOCTYPE html>
<html>
    <head>
        <title>example-list-links</title>
        <link type="text/css" rel="stylesheet" href="style.css"/>
    </head>
    <body class="n1-cookbook">
        <div class="wrap">
            <div class="content">
                <div class="col1"><div class="recipe"> 
 <h1>Example program: list links</h1> 
 <p>This example program demonstrates how to fetch a page from a URL; extract links, images, and other pointers; and examine their URLs and text.</p> 
 <p>Specify the URL to fetch as the program's sole argument.</p> 
 <pre><code class="prettyprint">package org.jsoup.examples;

import org.jsoup.Jsoup;
import org.jsoup.helper.Validate;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import java.io.IOException;

/**
 * Example program to list links from a URL.
 */
public class ListLinks {
    public static void main(String[] args) throws IOException {
        Validate.isTrue(args.length == 1, &quot;usage: supply url to fetch&quot;);
        String url = args[0];
        print(&quot;Fetching %s...&quot;, url);

        Document doc = Jsoup.connect(url).get();
        Elements links = doc.select(&quot;a[href]&quot;);
        Elements media = doc.select(&quot;[src]&quot;);
        Elements imports = doc.select(&quot;link[href]&quot;);

        print(&quot;\nMedia: (%d)&quot;, media.size());
        for (Element src : media) {
            if (src.tagName().equals(&quot;img&quot;))
                print(&quot; * %s: &lt;%s&gt; %sx%s (%s)&quot;,
                        src.tagName(), src.attr(&quot;abs:src&quot;), src.attr(&quot;width&quot;), src.attr(&quot;height&quot;),
                        trim(src.attr(&quot;alt&quot;), 20));
            else
                print(&quot; * %s: &lt;%s&gt;&quot;, src.tagName(), src.attr(&quot;abs:src&quot;));
        }

        print(&quot;\nImports: (%d)&quot;, imports.size());
        for (Element link : imports) {
            print(&quot; * %s &lt;%s&gt; (%s)&quot;, link.tagName(),link.attr(&quot;abs:href&quot;), link.attr(&quot;rel&quot;));
        }

        print(&quot;\nLinks: (%d)&quot;, links.size());
        for (Element link : links) {
            print(&quot; * a: &lt;%s&gt;  (%s)&quot;, link.attr(&quot;abs:href&quot;), trim(link.text(), 35));
        }
    }

    private static void print(String msg, Object... args) {
        System.out.println(String.format(msg, args));
    }

    private static String trim(String s, int width) {
        if (s.length() &gt; width)
            return s.substring(0, width-1) + &quot;.&quot;;
        else
            return s;
    }
}
<p class="srcLink"><a href="http://github.com/jhy/jsoup/blob/master/src/main/java/org/jsoup/examples/ListLinks.java">org/jsoup/examples/ListLinks.java</a></p></code></pre> 
 <h2>Example output (trimmed)</h2> 
 <pre><code>Fetching http://news.ycombinator.com/...

Media: (38)
 * img: &lt;http://ycombinator.com/images/y18.gif&gt; 18x18 ()
 * img: &lt;http://ycombinator.com/images/s.gif&gt; 10x1 ()
 * img: &lt;http://ycombinator.com/images/grayarrow.gif&gt; x ()
 * img: &lt;http://ycombinator.com/images/s.gif&gt; 0x10 ()
 * script: &lt;http://www.co2stats.com/propres.php?s=1138&gt;
 * img: &lt;http://ycombinator.com/images/s.gif&gt; 15x1 ()
 * img: &lt;http://ycombinator.com/images/hnsearch.png&gt; x ()
 * img: &lt;http://ycombinator.com/images/s.gif&gt; 25x1 ()
 * img: &lt;http://mixpanel.com/site_media/images/mixpanel_partner_logo_borderless.gif&gt; x (Analytics by Mixpan.)
 
Imports: (2)
 * link &lt;http://ycombinator.com/news.css&gt; (stylesheet)
 * link &lt;http://ycombinator.com/favicon.ico&gt; (shortcut icon)
 
Links: (141)
 * a: &lt;http://ycombinator.com&gt;  ()
 * a: &lt;http://news.ycombinator.com/news&gt;  (Hacker News)
 * a: &lt;http://news.ycombinator.com/newest&gt;  (new)
 * a: &lt;http://news.ycombinator.com/newcomments&gt;  (comments)
 * a: &lt;http://news.ycombinator.com/leaders&gt;  (leaders)
 * a: &lt;http://news.ycombinator.com/jobs&gt;  (jobs)
 * a: &lt;http://news.ycombinator.com/submit&gt;  (submit)
 * a: &lt;http://news.ycombinator.com/x?fnid=JKhQjfU7gW&gt;  (login)
 * a: &lt;http://news.ycombinator.com/vote?for=1094578&amp;dir=up&amp;whence=%6e%65%77%73&gt;  ()
 * a: &lt;http://www.readwriteweb.com/archives/facebook_gets_faster_debuts_homegrown_php_compiler.php?utm_source=feedburner&amp;utm_medium=feed&amp;utm_campaign=Feed%3A+readwriteweb+%28ReadWriteWeb%29&amp;utm_content=Twitter&gt;  (Facebook speeds up PHP)
 * a: &lt;http://news.ycombinator.com/user?id=mcxx&gt;  (mcxx)
 * a: &lt;http://news.ycombinator.com/item?id=1094578&gt;  (9 comments)
 * a: &lt;http://news.ycombinator.com/vote?for=1094649&amp;dir=up&amp;whence=%6e%65%77%73&gt;  ()
 * a: &lt;http://groups.google.com/group/django-developers/msg/a65fbbc8effcd914&gt;  (&quot;Tough. Django produces XHTML.&quot;)
 * a: &lt;http://news.ycombinator.com/user?id=andybak&gt;  (andybak)
 * a: &lt;http://news.ycombinator.com/item?id=1094649&gt;  (3 comments)
 * a: &lt;http://news.ycombinator.com/vote?for=1093927&amp;dir=up&amp;whence=%6e%65%77%73&gt;  ()
 * a: &lt;http://news.ycombinator.com/x?fnid=p2sdPLE7Ce&gt;  (More)
 * a: &lt;http://news.ycombinator.com/lists&gt;  (Lists)
 * a: &lt;http://news.ycombinator.com/rss&gt;  (RSS)
 * a: &lt;http://ycombinator.com/bookmarklet.html&gt;  (Bookmarklet)
 * a: &lt;http://ycombinator.com/newsguidelines.html&gt;  (Guidelines)
 * a: &lt;http://ycombinator.com/newsfaq.html&gt;  (FAQ)
 * a: &lt;http://ycombinator.com/newsnews.html&gt;  (News News)
 * a: &lt;http://news.ycombinator.com/item?id=363&gt;  (Feature Requests)
 * a: &lt;http://ycombinator.com&gt;  (Y Combinator)
 * a: &lt;http://ycombinator.com/w2010.html&gt;  (Apply)
 * a: &lt;http://ycombinator.com/lib.html&gt;  (Library)
 * a: &lt;http://www.webmynd.com/html/hackernews.html&gt;  ()
 * a: &lt;http://mixpanel.com/?from=yc&gt;  ()
</code></pre> 
</div>
                </div>
                <div class="col2">
                    <div class="toc box">
                        <h2>Cookbook contents</h2>
                        <h3>Introduction</h3>
                        <ol start="1">
                            <li><a href="parsing-a-document.htm">Parsing and traversing a Document</a></li>
                        </ol>
                        <h3>Input</h3>
                        <ol start="2">
                            <li><a href="parse-document-from-string.htm">Parse a document from a String</a></li>
                            <li><a href="parse-body-fragment.htm">Parsing a body fragment</a></li>
                            <li><a href="load-document-from-url.htm">Load a Document from a URL</a></li>
                            <li><a href="load-document-from-file.htm">Load a Document from a File</a></li>
                        </ol>
                        <h3>Extracting data</h3>
                        <ol start="6">
                            <li><a href="dom-navigation.htm">Use DOM methods to navigate a document</a></li>
                            <li><a href="selector-syntax.htm">Use selector-syntax to find elements</a></li>
                            <li><a href="attributes-text-html.htm">Extract attributes, text, and HTML from elements</a></li>
                            <li><a href="working-with-urls.htm">Working with URLs</a></li>
                            <li><a href="example-list-links.htm">Example program: list links</a></li>
                        </ol>
                        <h3>Modifying data</h3>
                        <ol start="11">
                            <li><a href="set-attributes.htm">Set attribute values</a></li>
                            <li><a href="set-html.htm">Set the HTML of an element</a></li>
                            <li><a href="set-text.htm">Setting the text content of elements</a></li>
                        </ol>
                        <h3>Cleaning HTML</h3>
                        <ol start="14">
                            <li><a href="whitelist-sanitizer.htm">Sanitize untrusted HTML (to prevent XSS)</a></li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </body>
</html>
